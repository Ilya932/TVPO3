name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint Python code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install flake8
        run: pip install flake8
      - name: Run flake8
        run: flake8 main.py tests/test.py

  test:
    name: Run Python tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run tests
        run: python -m unittest discover -s . -p "tests/test.py"

  docker-build:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker image
        run: |
          docker build -t pi3:latest .
      - name: Save Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: pi3-image
          path: pi3.tar

  deploy:
    name: Commit and Push Changes (Protected)
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Set Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      - name: Commit changes
        run: |
          git add .
          git commit -m "Apply changes after successful CI" || echo "No changes to commit"
      - name: Push changes
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
